name: 'Build Godot'
description: 'Build Godot applications for Windows, macOS, and Linux'

inputs:
  working-directory:
    description: 'The path to the project directory'
    required: false
    default: './'
  build-dir:
    description: 'The chosen build directory'
    required: true
    default: 'build'
  godot-executable:
    description: 'The path to the Godot executable'
    required: false
    default: /Applications/Godot.app/Contents/MacOS/Godot
  upload-artifacts:
    description: 'Whether to upload built artifacts'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Open Godot editor for reimport
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: ${{ inputs.godot-executable }} --import --headless --verbose
      
    - name: Build macOS application
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        mkdir -p ${{ inputs.build-dir }}/macos
        ${{ inputs.godot-executable }} --export-debug macOS --headless
        [ "$(ls -A ${{ inputs.build-dir }}/macos)" ]

    - name: Compress macOS build (to preserve permissions)
      if: ${{ inputs.upload-artifacts == 'true' }}
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        cd ${{ inputs.build-dir }}/macos
        tar -cvf ./macos.tar --exclude='*.command' ./*
    
    - uses: actions/upload-artifact@v4
      if: ${{ inputs.upload-artifacts == 'true' }}
      with:
        name: macos
        path: ${{ inputs.working-directory }}/${{ inputs.build-dir }}/macos/macos.tar

    - name: Build Windows application
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        mkdir -p ${{ inputs.build-dir }}/windows
        ${{ inputs.godot-executable }} --export-debug Windows --headless
        [ "$(ls -A ${{ inputs.build-dir }}/windows)" ]

    - name: Compress Windows build
      if: ${{ inputs.upload-artifacts == 'true' }}
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        cd ${{ inputs.build-dir }}/windows
        zip -m ./windows.zip ./*

    - uses: actions/upload-artifact@v4
      if: ${{ inputs.upload-artifacts == 'true' }}
      with:
        name: windows
        path: ${{ inputs.working-directory }}/${{ inputs.build-dir }}/windows/windows.zip

    - name: Build Linux application
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        mkdir -p ${{ inputs.build-dir }}/linux
        ${{ inputs.godot-executable }} --export-debug Linux --headless
        [ "$(ls -A ${{ inputs.build-dir }}/linux)" ]

    - name: Compress Linux build (to preserve permissions)
      if: ${{ inputs.upload-artifacts == 'true' }}
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        cd ${{ inputs.build-dir }}/linux
        tar -cvf ./linux.tar ./*

    - uses: actions/upload-artifact@v4
      if: ${{ inputs.upload-artifacts == 'true' }}
      with:
        name: linux
        path: ${{ inputs.working-directory }}/${{ inputs.build-dir }}/linux/linux.tar
